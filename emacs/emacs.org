#+TITLE: GNU Emacs Manual - Notes

GNU Emacs Manual

17th Edition - Emacs version 26.0.60


* Preface

- Documents the *use* and *simple customization* of the Emacs editor.
(Simple customization do not require you to be a programmer)

- Primarily a *reference manual*.
(Can also be used as a *primer*)

- The integrated learn-by-doing *tutorial* should be read *before* this manual.

| Key   | Command            |
|-------+--------------------|
| C-h t | Run the *tutorial* |

- Chapters reading:

|         Chapter | Description                                                                                                            |
|-----------------+------------------------------------------------------------------------------------------------------------------------|
|             1-2 | Manual *notational conventions* & *general appearance* of the Emacs display screen. (skim)                             |
|               4 | *Practice* commands shown.                                                                                             |
|              5+ | *Fundamental techniques and concepts* constantly used. (Need to be understood *thoroughly* so *practice until fluent*) |
|           14-19 | *Intermediate-level features* useful for many kinds of editing.                                                        |
|             20+ | *Optional features* (but useful). (Read when needed)                                                                   |
| Common Problems | When Emacs is *not working* properly. (How to cope with several problems & reporting bugs)                             |
|           Index | *Documentation of a particular command*. (*Keys* and *commmand names* have separated indexes)                          |
|        Glossary | Brief *dictionary of common terms*. (with cross-references)                                                            |


- Also available as *printed book* and *Info file*
(Info file can be read within Emacs or with info program)
(All manuals contain the *same content* inpendently from their format since they are generated from the *same source files* (also distributed with Emacs))

_Info is the principal format for documentation in the GNU system_

_GNU Emacs is a member of the Emacs editor family_
(There many Emacs editor, all sharing common principles of organization)

- Information on the underlying philosophy of Emacs and lessons learned from its development:
[[http://hdl.handle.net/1721.1/5736][Emacs, the Extensible, Customizable Self-Documenting Display Editor]]

- This manual is mainly intended for use with *GNU and Unix systems*.
(Emacs can also be used on MS-DOS, Microsoft Windows and Macintosh systems)
(The Info file version of this manual contains more information about using Emacs on those systems)
(Those systems use different file name syntax)
(MS-DOS does not support all GNU Emacs features)
(See dedicated Appendices)


* Distribution

_GNU Emacs is free software_
- Everyone is *free to use it* and *free to redistribute it* under certain conditions.
(*Not in the public domain*: copyrighted and there are restrictions on its distribution)
(Restrictions designed to *permit everything that a good cooperating citizen would do*)
(What is not allowed is to *try to prevent others form further sharing* any version of GNU Emacs)

- More precisions are found in the *GNU General Public License* included with Emacs.
(This manual is covered by the *GNU Free Documentation License*)
(Similar to the GPL, but more suitable for documentation)

_Getting a copy of GNU Emacs:_
- *From someone else who has it* (no permission needed, *just copy it*). (E.g., anonymous FTP)
- *When you buy a computer* (manufacturers are under the same terms that apply to everyone else).
(They are required to give you the *full sources*, including whatever *changes* they may have made, and permit you to *redistribute it*).

_The program must be free for you when you get it, not just free for the manufacturer_

[[https://www.gnu.org/software/emacs][More information on GNU Emacs]] (and info on getting it).

- Donations are made to the *Free Software Fundation* and are *tax deductible* in the US.
- Hardcopy versions of several GNU manual can also be bought on the [[https://shop.fsf.org][FSF online store]].

The income from sales serves the main foundation's purpose:
_the development of new free software, and improvements to existing programs_

Contact the FSF:
- [[https://www.fsf.org/about/contact/][Contact page]]
- Postal address:

Free Software Foundation
51 Franklin Street, Fifth Floor
Boston, MA 02110-1301
USA


* Acknowledgements

* Introduction

_GNU Emacs, the GNU incarnation of the advanced, self-documenting, customizable, extensible editor Emacs_
('G' in GNU's Not Unix is not silent)

- *Advanced*
  - Can do much more than simple *insertion* and *deletion* of text.
    (E.g., control subprocesses, indent programs automatically, show multiple files at once)
  - Editing commands operate in terms of *characters*, *words*, *lines*, *sentences*, *paragraphs*, and *pages*
as well as expressions and comments in various programming languages.

- *Self-documenting*
  - You can use *help commands* at any time (= special commands) to find out:
    - What your *options* are.
    - What any *special command* does.
    - *All the commands* that pertain a given topic.

- *Customizable*
  - *Altering the behavior* of Emacs commands is easy.
    (E.g., you can tell Emacs comment manipulation commands to use any given strings for comments for a programming language)
    (E.g., you can rebind the basic cursor motion commands to any keys on the keyboard that you find confortable)

- *Extensible*
  - Can go beyond *simple customization* and create entirely *new commands* (i.e., programs written in the *Lisp* language run by Emacs's own Lisp interpreter).
  - Existing commands can even be *redefined in the middle of an editing session*, without having to restart Emacs.
  - Writing an extension is *programming*, but non-programmers can use it afterwards.

_Most Emacs commands are written in Lisp but some use C instead for efficiency_

See Section "Preface" in [[https://www.gnu.org/software/emacs/manual/eintr.html][An Introduction to Programming in Emacs Lisp]] if you want to learn *Emacs Lisp* programming.


* The Organization of the Screen

|                                    | Graphical display  | Text terminal          |
|------------------------------------+--------------------+------------------------|
| (A) /frame/ (i.e., place occupied) | A graphical window | Entire terminal screen |

- Emacs starts with one frame, but additional frames can be created.

- Frame regions:

| Region name      | Emplacement                          | Description                                                                                                                                         | On graphical display? | On text terminal? |
|------------------+--------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------+-----------------------+-------------------|
| (A) /menu bar/   | Very top of the /frame/              | *Access commands* via series of menus                                                                                                               | Yes                   | Yes               |
| (A) /tool bar/   | Below the /menu bar/                 | A row of icons that *perform editing commands* when clicked                                                                                         | Yes                   | No                |
| (An) /echo area/ | Very bottom of the /frame/           | Where *informative messages* are displayed + Where you *enter information* when Emacs asks for it                                                   | Yes                   | Yes               |
| (A) /window/     | Below the /tool bar/ (if one exists) | *Main area* of the frame + Where the *buffer* (i.e., the text you are editing) is displayed                                                         | Yes                   | Yes               |
| (A) /scroll bar/ | Very right of each /window/          | Can be used to *scroll through the displayed buffer*                                                                                                | Yes                   | No                |
| (A) /mode line/  | *Last line* of the /window/          | *Displays various information* about what is going on in the buffer (e.g., unsaved changed, editing modes that are in use, the current line number) | Yes                   | Yes               |

- Graphical display system commonly use the word "window" with a *different meaning*, but in Emacs they are refered as "frame".
- Each region should be designated with "a" instead of "the" (i.e., each of them is not necesarily unique).

- When Emacs is started, there is normally *one window in the frame*.
- This window can be subdivided *horizontally* or *vertically*.
(Each of which can *independently display a buffer* (even the same one))

- At any time, *one window is the selected window*.
  - On /graphical display/: shown with a *more prominent cursor* (usually solid and blinking); other windows show a less prominent cursor (usually a hollow box).
  - On /text terminal/: there is *only one cursor*, which is shown in the selected window.

- The buffer displayed in the selected window is called the *current buffer* \rightarrow _this is where editing happens_.

_Most Emacs commands implicitly apply to the current buffer_
(The text displayed in *unselected windows* is mostly visible for reference)

- When using multiple frames (\implies using a graphical display), _selecting a particular frame selects a window in that frame_.


** Point

- _Point: the location where most editing commands take place_
(The term "point" commes from the character '.', which was the command in *TECO* for accessing editing position)
(TECO (Text Editor and Corrector) is the language in which the original Emacs was written in)

_Cursor \neq Point_ \rightarrow _The cursor shows where the point is_

- Many Emacs commands *move point to different places in the buffer*.
(E.g., mouse button 1 (normally the left button) place point where the mouse cursor is)

- By default, the *cursor* is drawn as a *solid block* and appears to be *on a character* \rightarrow but the *point* is in fact *between two characters*.
(it is situated /before/ the character under the cursor)

#+BEGIN_EXAMPLE
f r [o] b
   ^ ^
   | cursor position
point position
#+END_EXAMPLE

_The cursor remains over the same character before and after inserting characters_
(whether it is a *normal character* or the *EOL*)


- _Each buffer has its own value of point_
- _A buffer that is not currently displayed remembers its value of point if you later display it again_
- _If a same buffer is displayed in multiple windows, each of thos windows has its own value of point_


** The Echo Area

- _The echo area is so-named because one of its use is for echoing_ (i.e., displaying the characters of a *multi-character command* as you type)
  - _Single-character commands are not echoed_
  - _Characters typed so far for a multi-character command echoed if pause > 1 sec_ (to prompts you for the rest)
  - _Once echoing has started, the rest of the command echoes *immediately* as you type_ \rightarrow Behavior designed to give *confident users fast reponses* and *hesitant users maximum feedback*

- Echo area also displays /error messages/ when a command cannot do its job.
(Error messages may be accompanied by beeping or flashing the screen)


- Some commands display /informative messages/ in the echo area \rightarrow Telling you what the command has done or to provide you with specific information.
- (No beep or flash)

| Key   | Command                                                                                             |
|-------+-----------------------------------------------------------------------------------------------------|
| C-x = | *Describe character at point*, its *position in the buffer* and its *current column in the window*. |

- E.g., =C-x == displays it output in the echo area.

- Commands that take a long time often display *messages ending in '...'* while they are working \rightarrow Display 'done' when they are finished.
(+ how much progress sometimes (as a percentage))

- *Informative echo area messages* are saved in a special buffer named =*Message*= \rightarrow Useful to see a *missed message* or simply *message history*
(=*Message*= buffer is limited to a certain number of lines specified by the =message-log-max= variable)
(The oldest line is deleted whenever a new line is added at the end)


- The echo area is also used to display the /minibuffer/ \rightarrow I.e., a special window where you can input arguments to commands (e.g., the name of a file to be edited))
- When the minibuffer is in use, the text of the echo area begins with a /prompt string/ and it *becomes temporarily the selected window* (\implies the cursor appears within the minibuffer).

\rightarrow You can always get out of the minibuffer by typing =C-g=


